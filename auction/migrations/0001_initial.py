# Generated by Django 5.1.3 on 2025-04-07 01:17

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PopUpBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255)),
            ],
            options={
                'verbose_name': 'Pop Up Brand',
                'verbose_name_plural': 'Pop Up Brands',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='PopUpProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Product Specification',
                'verbose_name_plural': 'Product Specifications',
            },
        ),
        migrations.CreateModel(
            name='PopUpProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, unique=True, verbose_name='Product Name')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Product Type',
                'verbose_name_plural': 'Product Types',
            },
        ),
        migrations.CreateModel(
            name='PopUpCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required and unique', max_length=255, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Category safe URL')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='auction.popupcategory')),
            ],
            options={
                'verbose_name': 'Pop Up Category',
                'verbose_name_plural': 'Pop Up Categories',
            },
        ),
        migrations.CreateModel(
            name='PopUpProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(help_text='Requred', max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Not Required', verbose_name='description')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('starting_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Regular price')),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Retail Price')),
                ('auction_start_date', models.DateTimeField(blank=True, null=True)),
                ('auction_end_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_status', models.CharField(choices=[('anticipated', 'Anticipated'), ('in_transit', 'In Transit'), ('in_inventory', 'In Inventory')], default='anticipated', max_length=30)),
                ('bid_count', models.PositiveIntegerField(default=0)),
                ('reserve_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Change product visibility', verbose_name='Product visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='auction.popupbrand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auction.popupcategory')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auction.popupproducttype')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PopUpProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/default.png', help_text='Upload a product image', upload_to='images/', verbose_name='image')),
                ('alt_text', models.CharField(blank=True, help_text='Please add alternative text', max_length=255, null=True, verbose_name='Alternative text')),
                ('is_feature', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_image', to='auction.popupproduct')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='PopUpProductSpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Product specification value (maximum of 255 words)', max_length=255, verbose_name='value')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.popupproduct')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auction.popupproductspecification')),
            ],
            options={
                'verbose_name': 'Product Specification Value',
                'verbose_name_plural': 'Product Specification Values',
            },
        ),
        migrations.AddField(
            model_name='popupproductspecification',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auction.popupproducttype'),
        ),
        migrations.AlterUniqueTogether(
            name='popupproductspecification',
            unique_together={('product_type', 'name')},
        ),
        migrations.AddIndex(
            model_name='popupproduct',
            index=models.Index(fields=['auction_start_date'], name='auction_pop_auction_bcc87c_idx'),
        ),
        migrations.AddIndex(
            model_name='popupproduct',
            index=models.Index(fields=['auction_end_date'], name='auction_pop_auction_affbb4_idx'),
        ),
    ]
