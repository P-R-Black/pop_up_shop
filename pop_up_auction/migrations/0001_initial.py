# Generated by Django 5.2.4 on 2025-08-04 22:42

import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PopUpBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255)),
            ],
            options={
                'verbose_name': 'Pop Up Brand',
                'verbose_name_plural': 'Pop Up Brands',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='PopUpProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'PopUp Product Specification',
                'verbose_name_plural': 'PopUp Product Specifications',
            },
        ),
        migrations.CreateModel(
            name='PopUpProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, unique=True, verbose_name='Product Name')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'PopUp Product Type',
                'verbose_name_plural': 'PopUp Product Types',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PopUpCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required and unique', max_length=255, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Category safe URL')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='pop_up_auction.popupcategory')),
            ],
            options={
                'verbose_name': 'Pop Up Category',
                'verbose_name_plural': 'Pop Up Categories',
            },
        ),
        migrations.CreateModel(
            name='PopUpProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(help_text='Required', max_length=255, verbose_name='name')),
                ('secondary_product_title', models.CharField(blank=True, max_length=255, verbose_name='secondary_name')),
                ('description', models.TextField(blank=True, help_text='Not Required', verbose_name='description')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('buy_now_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('buy_now_start', models.DateTimeField(blank=True, null=True)),
                ('buy_now_end', models.DateTimeField(blank=True, null=True)),
                ('bought_now', models.BooleanField(default=False)),
                ('reserved_until', models.DateTimeField(blank=True, null=True)),
                ('current_highest_bid', models.DecimalField(blank=True, decimal_places=2, help_text='Stores the current highest bid for this product.', max_digits=10, null=True)),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Retail Price')),
                ('auction_start_date', models.DateTimeField(blank=True, null=True)),
                ('auction_end_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_status', models.CharField(choices=[('anticipated', 'Anticipated'), ('in_transit', 'In Transit'), ('in_inventory', 'In Inventory'), ('reserved', 'Reserved'), ('sold_out', 'Sold Out')], default='anticipated', max_length=30)),
                ('bid_count', models.PositiveIntegerField(default=0)),
                ('auction_finalized', models.BooleanField(default=False)),
                ('reserve_price', models.DecimalField(blank=True, decimal_places=2, help_text='Set a minimum price below which product wonâ€™t be sold', max_digits=10, null=True)),
                ('acquisition_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Price paid to acquire product, i.e. product + shipping + tax', max_digits=10, null=True)),
                ('product_weight_lbs', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in pounds for shipping calculation', max_digits=5, null=True)),
                ('zip_code_stored', models.CharField(blank=True, help_text='ZIP code of the storage or fulfillment location', max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Change product visibility', verbose_name='Product visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='pop_up_auction.popupbrand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pop_up_auction.popupcategory')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_auction', to=settings.AUTH_USER_MODEL)),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pop_up_auction.popupproducttype')),
            ],
            options={
                'verbose_name': 'PopUp Product',
                'verbose_name_plural': 'PopUp Products',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PopUpProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='images/default.png', help_text='Upload a product image', null=True, upload_to='images/', verbose_name='image')),
                ('image_url', models.URLField(blank=True, help_text='Paste the URL of the image (e.g. S3, Cloudinary)', null=True, verbose_name='External Image URL')),
                ('alt_text', models.CharField(blank=True, help_text='Please add alternative text', max_length=255, null=True, verbose_name='Alternative text')),
                ('is_feature', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_image', to='pop_up_auction.popupproduct')),
            ],
            options={
                'verbose_name': 'PopUp Product Image',
                'verbose_name_plural': 'PopUp Product Images',
            },
        ),
        migrations.CreateModel(
            name='PopUpProductSpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Product specification value (maximum of 255 words)', max_length=255, verbose_name='value')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pop_up_auction.popupproduct')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pop_up_auction.popupproductspecification')),
            ],
            options={
                'verbose_name': 'PopUp Product Specification Value',
                'verbose_name_plural': 'PopUp Product Specification Values',
            },
        ),
        migrations.AddField(
            model_name='popupproductspecification',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='pop_up_auction.popupproducttype'),
        ),
        migrations.CreateModel(
            name='WinnerReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires_at', models.DateTimeField()),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('notification_sent', models.BooleanField(default=False)),
                ('reminder_24hr_sent', models.BooleanField(default=False)),
                ('reminder_1hr_sent', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pop_up_auction.popupproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='popupproductspecification',
            unique_together={('product_type', 'name')},
        ),
        migrations.AddIndex(
            model_name='popupproduct',
            index=models.Index(fields=['auction_start_date'], name='pop_up_auct_auction_e6b549_idx'),
        ),
        migrations.AddIndex(
            model_name='popupproduct',
            index=models.Index(fields=['auction_end_date'], name='pop_up_auct_auction_cbf170_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='winnerreservation',
            unique_together={('product', 'user')},
        ),
    ]
